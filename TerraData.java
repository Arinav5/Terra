/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Employees;

import static Employees.Plant.simpleToDifficult;
import java.util.Calendar; 
import java.text.SimpleDateFormat;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Date;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;


public class TerraData extends javax.swing.JFrame{
    //stuff for finding what the user is currently doing
    private String finalUserName = "";
    private String whereAmerica = "";
    String curPlant = "";
    int doneMintCount = 0;
    int curRow = 0;
    int clicks = 0;
    int wishlistClicks = 0;
    boolean sent = false;
    //****************************************************************************************************************
    Plant recPlant;
    Plant wishlistCurrent;
    ArrayList <Plant> wishlist = new ArrayList<Plant>();
    Plant snakePlant = new Plant("Snake Plant", 10);
    Plant pothos = new Plant("Pothos", 5);
    Plant spiderPlant = new Plant("Spider Plant", 7);
    Plant aloe = new Plant("Aloe", 14);
    Plant palm = new Plant("Palm", 7);
    Plant calendula = new Plant("Calendula", 7);
    Plant orchid = new Plant("Orchid", 8);
    Plant succulent = new Plant("Succulent", 15);
    Plant blueSalvia = new Plant("Blue Salvia", 7);
    Plant blueColumbine = new Plant("Blue Columbine", 8);
    Plant monstera = new Plant("Monstera", 7);
    Plant hoya = new Plant("Hoya", 13);
    Plant maranta = new Plant("Maranta", 9);
    Plant jade = new Plant("Jade", 17);
    Plant castIron = new Plant("Cast Iron Plant", 7);
    
    
    Plant [][] America2 = {{palm, snakePlant}, {calendula, orchid}, {succulent, aloe}, {blueSalvia, blueColumbine}};
    Plant [][] America1 = {{pothos, monstera}, {hoya, maranta}, {jade, spiderPlant}, {castIron, aloe}};
    ArrayList <Plant> allPlants = new ArrayList<Plant>();
    Connection con;
    Statement stmt;
    Statement stmt2;
    Statement stmt3;
    Statement stmt4;
    ResultSet rs;
    ResultSet rs2;
    ResultSet rs3;
    ResultSet rs4;
    
                         
    // End of variables declaration                   
    
    
    //For the emails
    private final java.sql.Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
    Calendar cal1 = Calendar.getInstance();
    Calendar cal2 = Calendar.getInstance();
    public TerraData() {
        initComponents();
        DoConnect();
    }
    public boolean DoConnect( ) {
        try{
            //Connect to the database
            String host = "jdbc:derby://localhost:1527/Employees";
            String uName = "Arinav5";
            String uPass = "Arivari123@1!";
            con = DriverManager.getConnection(host, uName, uPass);
            
            //Execute SQL and load records into the resultset
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL = "select*from TERRADATA";
            rs = stmt.executeQuery(SQL);
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            
            
            
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(this, err.getMessage());
            return false;
        }
        return true;
    }   
    public void sendAlert(Date whenSend){
        TimerTask task1 = new sendEmail();
        Timer timer = new Timer();
        timer.schedule(task1, whenSend);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        allPanels = new javax.swing.JLayeredPane();
        welcomePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logIn = new javax.swing.JButton();
        signUp = new javax.swing.JButton();
        logInPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        logUsername = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        logPassword = new javax.swing.JPasswordField();
        logInButton = new javax.swing.JButton();
        signUpPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sigUserName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        sigPassword = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        sigConfirmPassword = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        signUpButton = new javax.swing.JButton();
        userInitial = new javax.swing.JPanel();
        userAccountWelcome = new javax.swing.JLabel();
        myPlants = new javax.swing.JButton();
        newPlant = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        wishlistPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        wishlistDisplay = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        userRecInitial = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        partAmericaSelection = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        plantRecommendations = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        recoDisplay = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        plantsDisplayPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        userPlantsDisplay = new javax.swing.JTextField();
        nextUserPlantsDisplay = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        waterPlantsDisplay = new javax.swing.JTextField();
        nextWater = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        chosePlant = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        plantChoice = new javax.swing.JComboBox<>();
        Next1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        searchDisplay = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        userPlant = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        textCustomPlant = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        saveCustomPlant = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        waterDaysText = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        peppermintPanel = new javax.swing.JPanel();
        roseStep = new javax.swing.JLabel();
        done = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        snakePlantPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        daystowait1 = new javax.swing.JLabel();
        save2 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        pothosPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        daystowait2 = new javax.swing.JLabel();
        save3 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        spiderPlantPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        daystowait3 = new javax.swing.JLabel();
        save4 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        aloePanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        daystowait4 = new javax.swing.JLabel();
        save5 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        palmPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        daystowait5 = new javax.swing.JLabel();
        save6 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        orchidPanel = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        daystowait6 = new javax.swing.JLabel();
        save7 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        calendulaPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        daystowait7 = new javax.swing.JLabel();
        save8 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        succulentPanel = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        daystowait8 = new javax.swing.JLabel();
        save9 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        blueSalviaPanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        daystowait9 = new javax.swing.JLabel();
        save10 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        blueColumbinePanel = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        daystowait10 = new javax.swing.JLabel();
        save11 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        monsteraPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        daystowait11 = new javax.swing.JLabel();
        save12 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        hoyaPanel = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        daystowait12 = new javax.swing.JLabel();
        save13 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        marantaPanel = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        daystowait13 = new javax.swing.JLabel();
        save14 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jadePanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        daystowait14 = new javax.swing.JLabel();
        save15 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        castIronPanel = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        daystowait15 = new javax.swing.JLabel();
        save1 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();

        jLabel11.setText("jLabel11");

        jLabel18.setText("jLabel18");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        allPanels.setLayout(new java.awt.CardLayout());

        jLabel1.setText("<html><h2>Welcome to Terra!</h2>");

        logIn.setText("Log In");
        logIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInActionPerformed(evt);
            }
        });

        signUp.setText("Sign Up");
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(logIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(signUp, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(logIn)
                .addGap(36, 36, 36)
                .addComponent(signUp)
                .addContainerGap(216, Short.MAX_VALUE))
        );

        allPanels.add(welcomePanel, "card4");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("User Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setText("<html> <h1>Log In</h1> ");

        logPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logPasswordActionPerformed(evt);
            }
        });

        logInButton.setText("Log In");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logInPanelLayout = new javax.swing.GroupLayout(logInPanel);
        logInPanel.setLayout(logInPanelLayout);
        logInPanelLayout.setHorizontalGroup(
            logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInPanelLayout.createSequentialGroup()
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logInPanelLayout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(logInPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logInButton)
                            .addGroup(logInPanelLayout.createSequentialGroup()
                                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(33, 33, 33)
                                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(logUsername)
                                    .addComponent(logPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))))))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        logInPanelLayout.setVerticalGroup(
            logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(logUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(logPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(logInButton)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        allPanels.add(logInPanel, "card6");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("User Name:");

        sigUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigUserNameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Password:");

        sigPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigPasswordActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Confirm Password:");

        jLabel10.setText("<html><h1>Sign Up</h1>");

        signUpButton.setText("Sign Up");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout signUpPanelLayout = new javax.swing.GroupLayout(signUpPanel);
        signUpPanel.setLayout(signUpPanelLayout);
        signUpPanelLayout.setHorizontalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signUpPanelLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signUpPanelLayout.createSequentialGroup()
                        .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addGroup(signUpPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(sigConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(signUpButton))
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signUpPanelLayout.createSequentialGroup()
                        .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sigPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sigUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(167, 167, 167))))
        );
        signUpPanelLayout.setVerticalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sigUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sigPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(sigConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(signUpButton)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        allPanels.add(signUpPanel, "card7");

        userAccountWelcome.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userAccountWelcome.setText("Hello, User!");

        myPlants.setText("My Plants");
        myPlants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myPlantsActionPerformed(evt);
            }
        });

        newPlant.setText("New Plant");
        newPlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlantActionPerformed(evt);
            }
        });

        jButton5.setText("Recommendations");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Wishlist");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userInitialLayout = new javax.swing.GroupLayout(userInitial);
        userInitial.setLayout(userInitialLayout);
        userInitialLayout.setHorizontalGroup(
            userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInitialLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userAccountWelcome)
                    .addGroup(userInitialLayout.createSequentialGroup()
                        .addGroup(userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(myPlants, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPlant))
                        .addGap(42, 42, 42)
                        .addGroup(userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton5))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        userInitialLayout.setVerticalGroup(
            userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInitialLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(userAccountWelcome)
                .addGap(63, 63, 63)
                .addGroup(userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myPlants)
                    .addComponent(jButton5))
                .addGap(29, 29, 29)
                .addGroup(userInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPlant)
                    .addComponent(jButton7))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        allPanels.add(userInitial, "card5");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("This list contains the plants you want to grow:");

        wishlistDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlistDisplayActionPerformed(evt);
            }
        });

        jButton12.setText("Next");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Back");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Delete");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout wishlistPanelLayout = new javax.swing.GroupLayout(wishlistPanel);
        wishlistPanel.setLayout(wishlistPanelLayout);
        wishlistPanelLayout.setHorizontalGroup(
            wishlistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wishlistPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(wishlistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(wishlistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, wishlistPanelLayout.createSequentialGroup()
                            .addComponent(jButton12)
                            .addGap(18, 18, 18)
                            .addComponent(jButton14))
                        .addComponent(wishlistDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(143, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wishlistPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addGap(78, 78, 78))
        );
        wishlistPanelLayout.setVerticalGroup(
            wishlistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wishlistPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel20)
                .addGap(36, 36, 36)
                .addComponent(wishlistDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(wishlistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addGap(42, 42, 42))
        );

        allPanels.add(wishlistPanel, "card12");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("What part of America do you live in?");

        partAmericaSelection.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        partAmericaSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Northwest", "West Coast", "South West", "North Central", "South Central", "North East", "East Coast", "South East" }));
        partAmericaSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partAmericaSelectionActionPerformed(evt);
            }
        });

        jButton6.setText("Next");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton11.setText("Back");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userRecInitialLayout = new javax.swing.GroupLayout(userRecInitial);
        userRecInitial.setLayout(userRecInitialLayout);
        userRecInitialLayout.setHorizontalGroup(
            userRecInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userRecInitialLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(userRecInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(partAmericaSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jLabel16))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userRecInitialLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addGap(35, 35, 35))
        );
        userRecInitialLayout.setVerticalGroup(
            userRecInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userRecInitialLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel16)
                .addGap(44, 44, 44)
                .addComponent(partAmericaSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addGap(32, 32, 32))
        );

        allPanels.add(userRecInitial, "card10");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("These plants are recommended for you \nbased on where you live:");

        jLabel19.setText("From easiest to care for to most difficult");

        jButton8.setText("Next");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Add to Wishlist");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Back");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout plantRecommendationsLayout = new javax.swing.GroupLayout(plantRecommendations);
        plantRecommendations.setLayout(plantRecommendationsLayout);
        plantRecommendationsLayout.setHorizontalGroup(
            plantRecommendationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plantRecommendationsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(plantRecommendationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plantRecommendationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(156, 156, 156))
        );
        plantRecommendationsLayout.setVerticalGroup(
            plantRecommendationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plantRecommendationsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addGap(53, 53, 53)
                .addComponent(recoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(84, 84, 84))
        );

        allPanels.add(plantRecommendations, "card11");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Your Plants:");

        nextUserPlantsDisplay.setText("Next");
        nextUserPlantsDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextUserPlantsDisplayActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("You need to water these plants:");

        nextWater.setText("Done");
        nextWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextWaterActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton31.setText("Delete");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setText("Previous");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout plantsDisplayPanelLayout = new javax.swing.GroupLayout(plantsDisplayPanel);
        plantsDisplayPanel.setLayout(plantsDisplayPanelLayout);
        plantsDisplayPanelLayout.setHorizontalGroup(
            plantsDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plantsDisplayPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(plantsDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(plantsDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1)
                        .addComponent(nextWater)
                        .addComponent(jLabel14)
                        .addComponent(jLabel4)
                        .addComponent(waterPlantsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(userPlantsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plantsDisplayPanelLayout.createSequentialGroup()
                        .addComponent(jButton32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextUserPlantsDisplay)
                        .addGap(18, 18, 18)
                        .addComponent(jButton31)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        plantsDisplayPanelLayout.setVerticalGroup(
            plantsDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plantsDisplayPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel4)
                .addGap(37, 37, 37)
                .addComponent(userPlantsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(plantsDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextUserPlantsDisplay)
                    .addComponent(jButton31)
                    .addComponent(jButton32))
                .addGap(64, 64, 64)
                .addComponent(jLabel14)
                .addGap(28, 28, 28)
                .addComponent(waterPlantsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(nextWater)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(39, 39, 39))
        );

        allPanels.add(plantsDisplayPanel, "card8");

        chosePlant.setMinimumSize(new java.awt.Dimension(500, 500));
        chosePlant.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel2.setText("<html><h2>What would you like to plant?<h2><html>");

        plantChoice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        plantChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "My own plant", "Peppermint", "Snake Plant", "Pothos", "Spider Plant", "Aloe", "Palm", "Calendula", "Orchid", "Succulent", "Blue Salvia", "Blue Columbine", "Monstera", "Hoya", "Maranta", "Jade", "Cast Iron Plant" }));
        plantChoice.setBorder(null);
        plantChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantChoiceActionPerformed(evt);
            }
        });

        Next1.setText("Next");
        Next1.setBorder(null);
        Next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton15.setText("Search");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chosePlantLayout = new javax.swing.GroupLayout(chosePlant);
        chosePlant.setLayout(chosePlantLayout);
        chosePlantLayout.setHorizontalGroup(
            chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chosePlantLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chosePlantLayout.createSequentialGroup()
                        .addComponent(plantChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(searchDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(chosePlantLayout.createSequentialGroup()
                        .addGroup(chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(chosePlantLayout.createSequentialGroup()
                                .addGroup(chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(Next1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(143, 143, 143)
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        chosePlantLayout.setVerticalGroup(
            chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chosePlantLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plantChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(chosePlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Next1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98)
                .addComponent(jButton2)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        allPanels.add(chosePlant, "card2");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Plant Name:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Custom Plant:");

        saveCustomPlant.setText("Save");
        saveCustomPlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCustomPlantActionPerformed(evt);
            }
        });

        jLabel15.setText("Water after how many days:");

        waterDaysText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterDaysTextActionPerformed(evt);
            }
        });

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userPlantLayout = new javax.swing.GroupLayout(userPlant);
        userPlant.setLayout(userPlantLayout);
        userPlantLayout.setHorizontalGroup(
            userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlantLayout.createSequentialGroup()
                .addGroup(userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userPlantLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel13))
                    .addGroup(userPlantLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userPlantLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(waterDaysText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userPlantLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textCustomPlant, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userPlantLayout.createSequentialGroup()
                                .addComponent(saveCustomPlant)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        userPlantLayout.setVerticalGroup(
            userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlantLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel13)
                .addGap(77, 77, 77)
                .addGroup(userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textCustomPlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(waterDaysText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(userPlantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveCustomPlant)
                    .addComponent(jButton4))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        allPanels.add(userPlant, "card9");

        peppermintPanel.setPreferredSize(new java.awt.Dimension(500, 500));
        peppermintPanel.setSize(500,500);

        roseStep.setText("<html>\n<h3>Step 1</h3>\n<p>Buy peppermint at your local grocery store, make sure that it's fresh.</p>\n<p>Now take the healthiest stems and remove the leaves from the stem. You want to leave the small leaves near the nodes because that's where the roots will grow out. </p>\n<p>You want to do this for 5-6 stems as that should be enough</p> \n\n<p> Now fill a cup with water and put the stems in it.</p> \n<p> Leave the stems in the cup for the next week, changing the water every three days</p> \n\n<p> When you have completed the steps above, please press the done button, it will notify the app to save your progress and remind you to change the water every three days </p>");

        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout peppermintPanelLayout = new javax.swing.GroupLayout(peppermintPanel);
        peppermintPanel.setLayout(peppermintPanelLayout);
        peppermintPanelLayout.setHorizontalGroup(
            peppermintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peppermintPanelLayout.createSequentialGroup()
                .addGroup(peppermintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(peppermintPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(done)
                        .addGap(28, 28, 28)
                        .addComponent(jButton3))
                    .addGroup(peppermintPanelLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(roseStep, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(417, 417, 417))
        );
        peppermintPanelLayout.setVerticalGroup(
            peppermintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peppermintPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(roseStep, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addGap(94, 94, 94)
                .addGroup(peppermintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(done)
                    .addComponent(jButton3))
                .addGap(48, 48, 48))
        );

        allPanels.add(peppermintPanel, "card3");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("How many days to wait until watering:");

        daystowait1.setText("jLabel22");

        save2.setText("Save");
        save2.setToolTipText("");
        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });

        jButton16.setText("Back");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout snakePlantPanelLayout = new javax.swing.GroupLayout(snakePlantPanel);
        snakePlantPanel.setLayout(snakePlantPanelLayout);
        snakePlantPanelLayout.setHorizontalGroup(
            snakePlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(snakePlantPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(snakePlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save2)
                    .addComponent(daystowait1)
                    .addComponent(jLabel21))
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, snakePlantPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addGap(64, 64, 64))
        );
        snakePlantPanelLayout.setVerticalGroup(
            snakePlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(snakePlantPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel21)
                .addGap(26, 26, 26)
                .addComponent(daystowait1)
                .addGap(46, 46, 46)
                .addComponent(save2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 255, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addGap(42, 42, 42))
        );

        allPanels.add(snakePlantPanel, "card13");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("How many days to wait until watering:");

        daystowait2.setText("jLabel22");

        save3.setText("Save");
        save3.setToolTipText("");
        save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save3ActionPerformed(evt);
            }
        });

        jButton17.setText("Back");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pothosPanelLayout = new javax.swing.GroupLayout(pothosPanel);
        pothosPanel.setLayout(pothosPanelLayout);
        pothosPanelLayout.setHorizontalGroup(
            pothosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pothosPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(pothosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save3)
                    .addComponent(daystowait2)
                    .addComponent(jLabel22))
                .addContainerGap(190, Short.MAX_VALUE))
            .addGroup(pothosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pothosPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton17)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        pothosPanelLayout.setVerticalGroup(
            pothosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pothosPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(daystowait2)
                .addGap(56, 56, 56)
                .addComponent(save3)
                .addContainerGap(331, Short.MAX_VALUE))
            .addGroup(pothosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pothosPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton17)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(pothosPanel, "card14");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("How many days to wait until watering:");

        daystowait3.setText("jLabel22");

        save4.setText("Save");
        save4.setToolTipText("");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });

        jButton18.setText("Back");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout spiderPlantPanelLayout = new javax.swing.GroupLayout(spiderPlantPanel);
        spiderPlantPanel.setLayout(spiderPlantPanelLayout);
        spiderPlantPanelLayout.setHorizontalGroup(
            spiderPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spiderPlantPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(spiderPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save4)
                    .addComponent(daystowait3)
                    .addComponent(jLabel23))
                .addContainerGap(206, Short.MAX_VALUE))
            .addGroup(spiderPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(spiderPlantPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton18)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        spiderPlantPanelLayout.setVerticalGroup(
            spiderPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spiderPlantPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel23)
                .addGap(30, 30, 30)
                .addComponent(daystowait3)
                .addGap(49, 49, 49)
                .addComponent(save4)
                .addContainerGap(329, Short.MAX_VALUE))
            .addGroup(spiderPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(spiderPlantPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton18)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(spiderPlantPanel, "card15");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("How many days to wait until watering:");

        daystowait4.setText("jLabel22");

        save5.setText("Save");
        save5.setToolTipText("");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });

        jButton19.setText("Back");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout aloePanelLayout = new javax.swing.GroupLayout(aloePanel);
        aloePanel.setLayout(aloePanelLayout);
        aloePanelLayout.setHorizontalGroup(
            aloePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aloePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(aloePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save5)
                    .addComponent(daystowait4)
                    .addComponent(jLabel24))
                .addContainerGap(199, Short.MAX_VALUE))
            .addGroup(aloePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aloePanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton19)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        aloePanelLayout.setVerticalGroup(
            aloePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aloePanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel24)
                .addGap(31, 31, 31)
                .addComponent(daystowait4)
                .addGap(46, 46, 46)
                .addComponent(save5)
                .addContainerGap(324, Short.MAX_VALUE))
            .addGroup(aloePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aloePanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton19)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(aloePanel, "card16");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("How many days to wait until watering:");

        daystowait5.setText("jLabel22");

        save6.setText("Save");
        save6.setToolTipText("");
        save6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save6ActionPerformed(evt);
            }
        });

        jButton20.setText("Back");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout palmPanelLayout = new javax.swing.GroupLayout(palmPanel);
        palmPanel.setLayout(palmPanelLayout);
        palmPanelLayout.setHorizontalGroup(
            palmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palmPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(palmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save6)
                    .addComponent(daystowait5)
                    .addComponent(jLabel25))
                .addContainerGap(189, Short.MAX_VALUE))
            .addGroup(palmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(palmPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton20)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        palmPanelLayout.setVerticalGroup(
            palmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palmPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel25)
                .addGap(28, 28, 28)
                .addComponent(daystowait5)
                .addGap(32, 32, 32)
                .addComponent(save6)
                .addContainerGap(336, Short.MAX_VALUE))
            .addGroup(palmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(palmPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton20)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(palmPanel, "card18");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("How many days to wait until watering:");

        daystowait6.setText("jLabel22");

        save7.setText("Save");
        save7.setToolTipText("");
        save7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save7ActionPerformed(evt);
            }
        });

        jButton21.setText("Back");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout orchidPanelLayout = new javax.swing.GroupLayout(orchidPanel);
        orchidPanel.setLayout(orchidPanelLayout);
        orchidPanelLayout.setHorizontalGroup(
            orchidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orchidPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(orchidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save7)
                    .addComponent(daystowait6)
                    .addComponent(jLabel26))
                .addContainerGap(188, Short.MAX_VALUE))
            .addGroup(orchidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(orchidPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton21)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        orchidPanelLayout.setVerticalGroup(
            orchidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orchidPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel26)
                .addGap(32, 32, 32)
                .addComponent(daystowait6)
                .addGap(41, 41, 41)
                .addComponent(save7)
                .addContainerGap(311, Short.MAX_VALUE))
            .addGroup(orchidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(orchidPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton21)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(orchidPanel, "card19");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("How many days to wait until watering:");

        daystowait7.setText("jLabel22");

        save8.setText("Save");
        save8.setToolTipText("");
        save8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save8ActionPerformed(evt);
            }
        });

        jButton22.setText("Back");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout calendulaPanelLayout = new javax.swing.GroupLayout(calendulaPanel);
        calendulaPanel.setLayout(calendulaPanelLayout);
        calendulaPanelLayout.setHorizontalGroup(
            calendulaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendulaPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(calendulaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save8)
                    .addComponent(daystowait7)
                    .addComponent(jLabel27))
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(calendulaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calendulaPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton22)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        calendulaPanelLayout.setVerticalGroup(
            calendulaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendulaPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel27)
                .addGap(29, 29, 29)
                .addComponent(daystowait7)
                .addGap(36, 36, 36)
                .addComponent(save8)
                .addContainerGap(337, Short.MAX_VALUE))
            .addGroup(calendulaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calendulaPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton22)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(calendulaPanel, "card18");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("How many days to wait until watering:");

        daystowait8.setText("jLabel22");

        save9.setText("Save");
        save9.setToolTipText("");
        save9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save9ActionPerformed(evt);
            }
        });

        jButton23.setText("Back");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout succulentPanelLayout = new javax.swing.GroupLayout(succulentPanel);
        succulentPanel.setLayout(succulentPanelLayout);
        succulentPanelLayout.setHorizontalGroup(
            succulentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(succulentPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(succulentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save9)
                    .addComponent(daystowait8)
                    .addComponent(jLabel28))
                .addContainerGap(189, Short.MAX_VALUE))
            .addGroup(succulentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(succulentPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton23)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        succulentPanelLayout.setVerticalGroup(
            succulentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(succulentPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel28)
                .addGap(28, 28, 28)
                .addComponent(daystowait8)
                .addGap(40, 40, 40)
                .addComponent(save9)
                .addContainerGap(322, Short.MAX_VALUE))
            .addGroup(succulentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(succulentPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton23)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(succulentPanel, "card20");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("How many days to wait until watering:");

        daystowait9.setText("jLabel22");

        save10.setText("Save");
        save10.setToolTipText("");
        save10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save10ActionPerformed(evt);
            }
        });

        jButton24.setText("Back");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout blueSalviaPanelLayout = new javax.swing.GroupLayout(blueSalviaPanel);
        blueSalviaPanel.setLayout(blueSalviaPanelLayout);
        blueSalviaPanelLayout.setHorizontalGroup(
            blueSalviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueSalviaPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(blueSalviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save10)
                    .addComponent(daystowait9)
                    .addComponent(jLabel29))
                .addContainerGap(186, Short.MAX_VALUE))
            .addGroup(blueSalviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(blueSalviaPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton24)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        blueSalviaPanelLayout.setVerticalGroup(
            blueSalviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueSalviaPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel29)
                .addGap(30, 30, 30)
                .addComponent(daystowait9)
                .addGap(28, 28, 28)
                .addComponent(save10)
                .addContainerGap(334, Short.MAX_VALUE))
            .addGroup(blueSalviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(blueSalviaPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton24)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(blueSalviaPanel, "card21");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("How many days to wait until watering:");

        daystowait10.setText("jLabel22");

        save11.setText("Save");
        save11.setToolTipText("");
        save11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save11ActionPerformed(evt);
            }
        });

        jButton25.setText("Back");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout blueColumbinePanelLayout = new javax.swing.GroupLayout(blueColumbinePanel);
        blueColumbinePanel.setLayout(blueColumbinePanelLayout);
        blueColumbinePanelLayout.setHorizontalGroup(
            blueColumbinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueColumbinePanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(blueColumbinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save11)
                    .addComponent(daystowait10)
                    .addComponent(jLabel30))
                .addContainerGap(185, Short.MAX_VALUE))
            .addGroup(blueColumbinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(blueColumbinePanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton25)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        blueColumbinePanelLayout.setVerticalGroup(
            blueColumbinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueColumbinePanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel30)
                .addGap(27, 27, 27)
                .addComponent(daystowait10)
                .addGap(39, 39, 39)
                .addComponent(save11)
                .addContainerGap(314, Short.MAX_VALUE))
            .addGroup(blueColumbinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(blueColumbinePanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton25)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(blueColumbinePanel, "card22");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("How many days to wait until watering:");

        daystowait11.setText("jLabel22");

        save12.setText("Save");
        save12.setToolTipText("");
        save12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save12ActionPerformed(evt);
            }
        });

        jButton26.setText("Back");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout monsteraPanelLayout = new javax.swing.GroupLayout(monsteraPanel);
        monsteraPanel.setLayout(monsteraPanelLayout);
        monsteraPanelLayout.setHorizontalGroup(
            monsteraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monsteraPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(monsteraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save12)
                    .addComponent(daystowait11)
                    .addComponent(jLabel31))
                .addContainerGap(195, Short.MAX_VALUE))
            .addGroup(monsteraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(monsteraPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton26)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        monsteraPanelLayout.setVerticalGroup(
            monsteraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monsteraPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel31)
                .addGap(29, 29, 29)
                .addComponent(daystowait11)
                .addGap(42, 42, 42)
                .addComponent(save12)
                .addContainerGap(333, Short.MAX_VALUE))
            .addGroup(monsteraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(monsteraPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton26)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(monsteraPanel, "card23");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("How many days to wait until watering:");

        daystowait12.setText("jLabel22");

        save13.setText("Save");
        save13.setToolTipText("");
        save13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save13ActionPerformed(evt);
            }
        });

        jButton27.setText("Back");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hoyaPanelLayout = new javax.swing.GroupLayout(hoyaPanel);
        hoyaPanel.setLayout(hoyaPanelLayout);
        hoyaPanelLayout.setHorizontalGroup(
            hoyaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hoyaPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(hoyaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save13)
                    .addComponent(daystowait12)
                    .addComponent(jLabel32))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(hoyaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(hoyaPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton27)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        hoyaPanelLayout.setVerticalGroup(
            hoyaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hoyaPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel32)
                .addGap(27, 27, 27)
                .addComponent(daystowait12)
                .addGap(40, 40, 40)
                .addComponent(save13)
                .addContainerGap(331, Short.MAX_VALUE))
            .addGroup(hoyaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(hoyaPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton27)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(hoyaPanel, "card24");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("How many days to wait until watering:");

        daystowait13.setText("jLabel22");

        save14.setText("Save");
        save14.setToolTipText("");
        save14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save14ActionPerformed(evt);
            }
        });

        jButton28.setText("Back");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout marantaPanelLayout = new javax.swing.GroupLayout(marantaPanel);
        marantaPanel.setLayout(marantaPanelLayout);
        marantaPanelLayout.setHorizontalGroup(
            marantaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marantaPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(marantaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save14)
                    .addComponent(daystowait13)
                    .addComponent(jLabel33))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(marantaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(marantaPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton28)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        marantaPanelLayout.setVerticalGroup(
            marantaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marantaPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel33)
                .addGap(29, 29, 29)
                .addComponent(daystowait13)
                .addGap(39, 39, 39)
                .addComponent(save14)
                .addContainerGap(332, Short.MAX_VALUE))
            .addGroup(marantaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(marantaPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton28)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(marantaPanel, "card25");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("How many days to wait until watering:");

        daystowait14.setText("jLabel22");

        save15.setText("Save");
        save15.setToolTipText("");
        save15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save15ActionPerformed(evt);
            }
        });

        jButton29.setText("Back");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jadePanelLayout = new javax.swing.GroupLayout(jadePanel);
        jadePanel.setLayout(jadePanelLayout);
        jadePanelLayout.setHorizontalGroup(
            jadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jadePanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save15)
                    .addComponent(daystowait14)
                    .addComponent(jLabel34))
                .addContainerGap(195, Short.MAX_VALUE))
            .addGroup(jadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jadePanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton29)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        jadePanelLayout.setVerticalGroup(
            jadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jadePanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel34)
                .addGap(31, 31, 31)
                .addComponent(daystowait14)
                .addGap(33, 33, 33)
                .addComponent(save15)
                .addContainerGap(337, Short.MAX_VALUE))
            .addGroup(jadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jadePanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton29)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(jadePanel, "card26");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("How many days to wait until watering:");

        daystowait15.setText("jLabel22");

        save1.setText("Save");
        save1.setToolTipText("");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        jButton30.setText("Back");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout castIronPanelLayout = new javax.swing.GroupLayout(castIronPanel);
        castIronPanel.setLayout(castIronPanelLayout);
        castIronPanelLayout.setHorizontalGroup(
            castIronPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(castIronPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(castIronPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save1)
                    .addComponent(daystowait15)
                    .addComponent(jLabel35))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(castIronPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(castIronPanelLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jButton30)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );
        castIronPanelLayout.setVerticalGroup(
            castIronPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(castIronPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel35)
                .addGap(26, 26, 26)
                .addComponent(daystowait15)
                .addGap(59, 59, 59)
                .addComponent(save1)
                .addContainerGap(318, Short.MAX_VALUE))
            .addGroup(castIronPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(castIronPanelLayout.createSequentialGroup()
                    .addGap(238, 238, 238)
                    .addComponent(jButton30)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        allPanels.add(castIronPanel, "card27");

        getContentPane().add(allPanels, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(logInPanel);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_logInActionPerformed

    private void logPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logPasswordActionPerformed

    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed
        // TODO add your handling code here:
        boolean valid = false;
        try{
            rs = stmt.executeQuery("select * from TerraData"); //moves to before first line again
            while(rs.next()){
                String userName = rs.getString("USERNAME");
                String password = rs.getString("PASSWORD");
                String userUsernameInput = logUsername.getText();
                String userPasswordInput = String.valueOf(logPassword.getPassword());
                if(userName.equals(userUsernameInput) && userPasswordInput.equals(password)){
                    allPanels.removeAll();
                    allPanels.add(userInitial);
                    allPanels.repaint();
                    allPanels.revalidate();
                    userAccountWelcome.setText("Hello, " + userName + "!");
                    valid = true;
                    finalUserName = userName;
                    stmt3 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    String SQL3 = "select*from TERRAPLANTS where USERNAME= '" + finalUserName + "'";
                    rs3 = stmt3.executeQuery(SQL3);
                    stmt4 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    String SQL4 = "select*from TERRAPLANTS where USERNAME= '" + finalUserName + "'";
                    rs4 = stmt4.executeQuery(SQL4);
                    allPlants.add(0, snakePlant);
                    allPlants.add(pothos);
                    allPlants.add(spiderPlant);
                    allPlants.add(aloe);
                    allPlants.add(palm);
                    allPlants.add(calendula);
                    allPlants.add(orchid);
                    allPlants.add(succulent);
                    allPlants.add(blueSalvia);
                    allPlants.add(blueColumbine);
                    allPlants.add(monstera);
                    allPlants.add(hoya);
                    allPlants.add(maranta);
                    allPlants.add(jade);
                    allPlants.add(castIron);
                    for(Plant[] plants: America1){
                        for(Plant plant: plants){
                            System.out.println(plant.getName());
                        }
                    }
                    break;
                }
            }
            if(!valid){
                JOptionPane.showMessageDialog(TerraData.this, "No such user was found");
            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_logInButtonActionPerformed

    private void plantChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plantChoiceActionPerformed

    private void Next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next1ActionPerformed
        // TODO add your handling code here:
        String plant = (String)plantChoice.getSelectedItem();
        curPlant = plant;
        Plant curPlant2 = new Plant("");
        for(int i = 0; i<allPlants.size(); i++){
            if(allPlants.get(i).getName().equalsIgnoreCase(plant)){
                curPlant2 = allPlants.get(i);
            }
        }
        if(plant.equals("Peppermint")){
            allPanels.removeAll();
            allPanels.add(peppermintPanel);
            allPanels.repaint();
            allPanels.revalidate();
        }
        if(plant.equals("My own plant")){
            allPanels.removeAll();
            allPanels.add(userPlant);
            allPanels.repaint();
            allPanels.revalidate();
        }
        if(plant.equals("Snake Plant")){
            allPanels.removeAll();
            allPanels.add(snakePlantPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait1.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Pothos")){
            allPanels.removeAll();
            allPanels.add(pothosPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait2.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Spider Plant")){
            allPanels.removeAll();
            allPanels.add(spiderPlantPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait3.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Aloe")){
            allPanels.removeAll();
            allPanels.add(aloePanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait4.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Palm")){
            allPanels.removeAll();
            allPanels.add(palmPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait5.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Calendula")){
            allPanels.removeAll();
            allPanels.add(calendulaPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait6.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Orchid")){
            allPanels.removeAll();
            allPanels.add(orchidPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait7.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Succulent")){
            allPanels.removeAll();
            allPanels.add(succulentPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait8.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Blue Salvia")){
            allPanels.removeAll();
            allPanels.add(blueSalviaPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait9.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Blue Columbine")){
            allPanels.removeAll();
            allPanels.add(blueColumbinePanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait10.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Monstera")){
            allPanels.removeAll();
            allPanels.add(monsteraPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait11.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Hoya")){
            allPanels.removeAll();
            allPanels.add(hoyaPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait12.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Maranta")){
            allPanels.removeAll();
            allPanels.add(marantaPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait13.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Jade")){
            allPanels.removeAll();
            allPanels.add(jadePanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait14.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
        if(plant.equals("Cast Iron Plant")){
            allPanels.removeAll();
            allPanels.add(castIronPanel);
            allPanels.repaint();
            allPanels.revalidate();
            daystowait15.setText(Integer.toString(curPlant2.getWaterAfterDays()));
        }
    }//GEN-LAST:event_Next1ActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        // TODO add your handling code here
        String peppermintStep2 = "<html>\n" +
        "<h3>Step 2</h3>\n" +
        "<p>Now your mint should have some roots growing out of the nodes and it is ready to be put in soil</p>\n" +
        "<P>Fill a pot with a mixture of soil and compost, about 8 inches in depth should do.</p>\n" +
        "<p>Now place the stem in the soil and water it until the soil is moist</p>\n" +
        "<p>You should water the stem everyday to make sure the soil stays this way. It is suggested to water it every morning.</p>\n" +
        "<p>When you're done with this step please press done.</p>\n" +
        "<p>Everytime you login to the app you have to select that you completed watering the plant for the day</p>\n" +
        "<p>If you fail to login, an email will be sent out reminding you to water it.</p>\n" +
        "<p>Best of luck!</p>";
        String [] mintSteps = {"Buy peppermint", peppermintStep2};
        doneMintCount++;
        if(doneMintCount < mintSteps.length){
            roseStep.setText(mintSteps[doneMintCount]);
        }
        
        try{
          if(doneMintCount == mintSteps.length){
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", "Peppermint");
            rs2.updateInt("REPEATAFTERDAYS", 2);
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
            
          }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_doneActionPerformed

    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(signUpPanel);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_signUpActionPerformed

    private void sigPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sigPasswordActionPerformed

    private void sigUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sigUserNameActionPerformed

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        // TODO add your handling code here:
        String UserName = sigUserName.getText();
        String password = String.valueOf(sigPassword.getPassword());
        String confirmPassword = String.valueOf(sigConfirmPassword.getPassword());
        boolean valid = false;
        try{
            rs = stmt.executeQuery("select * from TerraData");
            while(rs.next()){
                String user = rs.getString("USERNAME");
                if(!user.equals(UserName)) valid = true;
            }
            if(valid && password.equals(confirmPassword) && !password.equals("") && !UserName.equals("")){
                rs.moveToInsertRow();
                rs.updateString("USERNAME", UserName);
                rs.updateString("PASSWORD", password);

                rs.insertRow();
                stmt.close();
                rs.close();
                
                stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                String sql = "SELECT * FROM TerraData";
                rs = stmt.executeQuery(sql);
                
                allPanels.removeAll();
                allPanels.add(logInPanel);
                allPanels.repaint();
                allPanels.revalidate();
            }
            else{
                JOptionPane.showMessageDialog(TerraData.this, "Couldn't create account, try again");
            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void newPlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlantActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_newPlantActionPerformed

    private void myPlantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myPlantsActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(plantsDisplayPanel);
        allPanels.repaint();
        allPanels.revalidate();
        try{
//            stmt3 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
//            String SQL3 = "select*from TERRAPLANTS where USERNAME= '" + finalUserName + "'";
//            rs3 = stmt3.executeQuery(SQL3);
            if(rs4.next()){
                String plant2 = rs4.getString("PLANTNAME");
                userPlantsDisplay.setText(plant2);
            }
            while(rs3.next()){
            String plant = rs3.getString("PLANTNAME");
            Date lastUpdated = rs3.getDate("LASTUPDATEDDATE");
            Calendar cal1 = Calendar.getInstance();
            Calendar cal2 = Calendar.getInstance();
            cal1.setTime(lastUpdated);
            cal2.setTime(date);
            boolean sameDay = cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR);
                if(sameDay){
                    waterPlantsDisplay.setText(plant);
                    curRow = rs3.getRow();
                    stmt3.close();
                    rs3.close();
                    
                    stmt3 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    String SQL3 = "select*from TERRAPLANTS where USERNAME= '" + finalUserName + "'";
                    rs3 = stmt3.executeQuery(SQL3);
                    break;
                }
            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_myPlantsActionPerformed

    private void nextUserPlantsDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextUserPlantsDisplayActionPerformed
        // TODO add your handling code here:
        
        try{
            
            if(rs4.next()){
                String plant = rs4.getString("PLANTNAME");
                userPlantsDisplay.setText(plant);
            }
            else{
                rs4.previous();
                JOptionPane.showMessageDialog(TerraData.this, "That's all!");

            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_nextUserPlantsDisplayActionPerformed

    private void saveCustomPlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCustomPlantActionPerformed
        // TODO add your handling code here:
        try{
          String newPlant = textCustomPlant.getText();
          int repeat = Integer.parseInt(waterDaysText.getText());
          if(newPlant.length() > 0){
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", newPlant);
            rs2.updateInt("REPEATAFTERDAYS", repeat);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            if(!sent){
                sendAlert(updatedDate);
                sent = true;
            }
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
          }
          else{
            JOptionPane.showMessageDialog(TerraData.this, "Please enter a valid plant");
          }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_saveCustomPlantActionPerformed

    private void nextWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextWaterActionPerformed
        // TODO add your handling code here:

        try{
            if(rs3.next()){
                rs3.absolute(curRow);
                String plant = rs3.getString("PLANTNAME");
                Date lastUpdated = rs3.getDate("LASTUPDATEDDATE");
                Calendar cal1 = Calendar.getInstance();
                Calendar cal2 = Calendar.getInstance();
                cal1.setTime(lastUpdated);
                cal2.setTime(date);
                boolean sameDay = cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR);
                if(sameDay){
                    waterPlantsDisplay.setText(plant);
                    cal1.add(Calendar.DAY_OF_MONTH, rs3.getInt("REPEATAFTERDAYS"));
                    java.sql.Date updatedDate = new java.sql.Date(cal1.getTime().getTime());
                    rs3.updateDate("LASTUPDATEDDATE", updatedDate);
                    rs3.updateRow();
                    sendAlert(updatedDate);
                    JOptionPane.showMessageDialog(TerraData.this, "Updated");
                   
                }
                System.out.println(rs3.getRow());
                curRow++;
            }
            else{
                rs3.previous();
                JOptionPane.showMessageDialog(TerraData.this, "That's all!");
            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_nextWaterActionPerformed

    private void waterDaysTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterDaysTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waterDaysTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userInitial);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userInitial);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userRecInitial);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void partAmericaSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partAmericaSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_partAmericaSelectionActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String where = (String)partAmericaSelection.getSelectedItem();
        whereAmerica = where;
            allPanels.removeAll();
            allPanels.add(plantRecommendations);
            allPanels.repaint();
            allPanels.revalidate();
        if(where.equals("Northwest")){
            simpleToDifficult(America2[0]);
            if(clicks == 0){
               recoDisplay.setText(America2[0][0].getName());
               recPlant = America2[0][0];
            }
        }
        if(where.equals("West Coast")){
            simpleToDifficult(America2[1]);
            if(clicks == 0){
               recoDisplay.setText(America2[1][0].getName());
               recPlant = America2[1][0];
            }
        }
        if(where.equals("South West")){
            simpleToDifficult(America2[2]);
            if(clicks == 0){
               recoDisplay.setText(America2[2][0].getName());
               recPlant = America2[2][0];
            }
        }
        if(where.equals("North Central")){
            simpleToDifficult(America2[3]);
            if(clicks == 0){
               recoDisplay.setText(America2[3][0].getName());
               recPlant = America2[3][0];
            }
        }
        if(where.equals("South Central")){
            simpleToDifficult(America1[0]);
            if(clicks == 0){
               recoDisplay.setText(America1[0][0].getName());
               recPlant = America1[0][0];
            }
        }
        if(where.equals("North East")){
            simpleToDifficult(America1[1]);
            if(clicks == 0){
               recoDisplay.setText(America1[1][0].getName());
               recPlant = America1[1][0];
            }
        }
        if(where.equals("East Coast")){
            simpleToDifficult(America1[2]);
            if(clicks == 0){
               recoDisplay.setText(America1[2][0].getName());
               recPlant = America1[2][0];
            }
        }
        if(where.equals("South East")){
           simpleToDifficult(America1[3]);
            if(clicks == 0){
               recoDisplay.setText(America1[3][0].getName());
               recPlant = America1[3][0];
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(wishlistPanel);
        allPanels.repaint();
        allPanels.revalidate();
        if(wishlist.size() > 0){
            wishlistDisplay.setText(wishlist.get(wishlistClicks%wishlist.size()).getName());
            wishlistCurrent = wishlist.get(wishlistClicks%wishlist.size());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        clicks++;
        for(int i = 0; i<America2.length; i++){
            simpleToDifficult(America2[i]);
        }
        for(int i = 0; i<America1.length; i++){
            simpleToDifficult(America1[i]);
        }
        if(whereAmerica.equals("Northwest")){
            recoDisplay.setText(America2[0][clicks % America2[0].length].getName());
            recPlant = America2[0][clicks % America2[0].length];
        }
        if(whereAmerica.equals("West Coast")){
            recoDisplay.setText(America2[1][clicks % America2[1].length].getName());
            recPlant = America2[1][clicks % America2[1].length];
        }
        if(whereAmerica.equals("South West")){
            recoDisplay.setText(America2[2][clicks % America2[2].length].getName());
            recPlant = America2[2][clicks % America2[2].length];
        }
        if(whereAmerica.equals("North Central")){
            recoDisplay.setText(America2[3][clicks % America2[3].length].getName());
            recPlant = America2[3][clicks % America2[3].length];
        }
        if(whereAmerica.equals("South Central")){
            recoDisplay.setText(America1[0][clicks % America1[0].length].getName());
            recPlant = America1[0][clicks % America1[0].length];
        }
        if(whereAmerica.equals("North East")){
            recoDisplay.setText(America1[1][clicks % America1[1].length].getName());
            recPlant = America1[1][clicks % America1[1].length];
        }
        if(whereAmerica.equals("East Coast")){
            recoDisplay.setText(America1[2][clicks % America1[2].length].getName());
            recPlant = America1[2][clicks % America1[2].length];
        }
        if(whereAmerica.equals("South East")){
            recoDisplay.setText(America1[3][clicks % America1[3].length].getName());
            recPlant = America1[3][clicks % America1[3].length];
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userRecInitial);
        allPanels.repaint();
        allPanels.revalidate();
        clicks = 0;
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userInitial);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void wishlistDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlistDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wishlistDisplayActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        wishlistClicks++;
        if(wishlist.size() > 0){
            wishlistDisplay.setText(wishlist.get(wishlistClicks%wishlist.size()).getName());
            wishlistCurrent = wishlist.get(wishlistClicks%wishlist.size());
        }
        else{
            JOptionPane.showMessageDialog(TerraData.this, "Your wishlist is empty");
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        wishlist.add(recPlant);
        JOptionPane.showMessageDialog(TerraData.this, "Added");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(userInitial);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        if(wishlist.size() > 0){
            wishlist.remove(wishlistCurrent);
            wishlistDisplay.setText("");
            JOptionPane.showMessageDialog(TerraData.this, "Deleted");
        }
        else{
            JOptionPane.showMessageDialog(TerraData.this, "No items to remove");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        String userChoice = searchDisplay.getText();
        Plant plant = new Plant("");
        boolean valid = false;
        for(int i = 0; i<allPlants.size(); i++){
            if(allPlants.get(i).getName().equalsIgnoreCase(userChoice)){
                valid = true;
            }
        }
        if(valid){
            JOptionPane.showMessageDialog(TerraData.this, "This item exists");
        }
        else{
            JOptionPane.showMessageDialog(TerraData.this, "This item doesn't exist");
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
        // TODO add your handling code here:
        try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save2ActionPerformed

    private void save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save3ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save3ActionPerformed

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save5ActionPerformed

    private void save6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save6ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save6ActionPerformed

    private void save7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save7ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save7ActionPerformed

    private void save8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save8ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save8ActionPerformed

    private void save9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save9ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save9ActionPerformed

    private void save10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save10ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save10ActionPerformed

    private void save11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save11ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save11ActionPerformed

    private void save12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save12ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save12ActionPerformed

    private void save13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save13ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save13ActionPerformed

    private void save14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save14ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save14ActionPerformed

    private void save15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save15ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save15ActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        // TODO add your handling code here:
         try{
            Plant plant = new Plant("");
            for(int i = 0; i< allPlants.size(); i++){
                if(allPlants.get(i).getName().equals(curPlant)){
                    plant = allPlants.get(i);
                }
            }
            rs2.moveToInsertRow();
            rs2.updateString("USERNAME", finalUserName);
            rs2.updateString("PLANTNAME", plant.getName());
            rs2.updateInt("REPEATAFTERDAYS", plant.getWaterAfterDays());
            rs2.updateDate("LASTUPDATEDDATE", date);
            Calendar calDate = toCalendar(date);
            calDate.add(Calendar.DAY_OF_MONTH, rs2.getInt("REPEATAFTERDAYS"));
            java.sql.Date updatedDate = new java.sql.Date(calDate.getTime().getTime());
            rs2.updateDate("LASTUPDATEDDATE", updatedDate);
            sendAlert(updatedDate);
            rs2.insertRow();
            stmt2.close();
            rs2.close();
            
            stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "select*from TERRAPLANTS";
            rs2 = stmt2.executeQuery(SQL2);
            
            JOptionPane.showMessageDialog(TerraData.this, "New plant added!");
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_save1ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        allPanels.removeAll();
        allPanels.add(chosePlant);
        allPanels.repaint();
        allPanels.revalidate();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        try{
            rs4.deleteRow();
            stmt4.close();
            rs4.close();
            
            stmt4 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String SQL4 = "select*from TERRAPLANTS where USERNAME= '" + finalUserName + "'";
            rs4 = stmt4.executeQuery(SQL4);
            JOptionPane.showMessageDialog(TerraData.this, "Deleted");
            if(rs4.next()){
                String plant = rs4.getString("PLANTNAME");
                userPlantsDisplay.setText(plant);
            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        try{
            if(rs4.previous()){
                String plant = rs4.getString("PLANTNAME");
                userPlantsDisplay.setText(plant);
            }
            else{
                rs4.next();
                JOptionPane.showMessageDialog(TerraData.this, "That's all!");

            }
        }
        catch(SQLException err){
            JOptionPane.showMessageDialog(TerraData.this, err.getMessage());
        }
    }//GEN-LAST:event_jButton32ActionPerformed
    public static Calendar toCalendar(Date date){ 
      Calendar cal = Calendar.getInstance();
      cal.setTime(date);
      return cal;
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Next1;
    private javax.swing.JLayeredPane allPanels;
    private javax.swing.JPanel aloePanel;
    private javax.swing.JPanel blueColumbinePanel;
    private javax.swing.JPanel blueSalviaPanel;
    private javax.swing.JPanel calendulaPanel;
    private javax.swing.JPanel castIronPanel;
    private javax.swing.JPanel chosePlant;
    private javax.swing.JLabel daystowait1;
    private javax.swing.JLabel daystowait10;
    private javax.swing.JLabel daystowait11;
    private javax.swing.JLabel daystowait12;
    private javax.swing.JLabel daystowait13;
    private javax.swing.JLabel daystowait14;
    private javax.swing.JLabel daystowait15;
    private javax.swing.JLabel daystowait2;
    private javax.swing.JLabel daystowait3;
    private javax.swing.JLabel daystowait4;
    private javax.swing.JLabel daystowait5;
    private javax.swing.JLabel daystowait6;
    private javax.swing.JLabel daystowait7;
    private javax.swing.JLabel daystowait8;
    private javax.swing.JLabel daystowait9;
    private javax.swing.JButton done;
    private javax.swing.JPanel hoyaPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel jadePanel;
    private javax.swing.JButton logIn;
    private javax.swing.JButton logInButton;
    private javax.swing.JPanel logInPanel;
    private javax.swing.JPasswordField logPassword;
    private javax.swing.JTextField logUsername;
    private javax.swing.JPanel marantaPanel;
    private javax.swing.JPanel monsteraPanel;
    private javax.swing.JButton myPlants;
    private javax.swing.JButton newPlant;
    private javax.swing.JButton nextUserPlantsDisplay;
    private javax.swing.JButton nextWater;
    private javax.swing.JPanel orchidPanel;
    private javax.swing.JPanel palmPanel;
    private javax.swing.JComboBox<String> partAmericaSelection;
    private javax.swing.JPanel peppermintPanel;
    private javax.swing.JComboBox<String> plantChoice;
    private javax.swing.JPanel plantRecommendations;
    private javax.swing.JPanel plantsDisplayPanel;
    private javax.swing.JPanel pothosPanel;
    private javax.swing.JTextField recoDisplay;
    private javax.swing.JLabel roseStep;
    private javax.swing.JButton save1;
    private javax.swing.JButton save10;
    private javax.swing.JButton save11;
    private javax.swing.JButton save12;
    private javax.swing.JButton save13;
    private javax.swing.JButton save14;
    private javax.swing.JButton save15;
    private javax.swing.JButton save2;
    private javax.swing.JButton save3;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JButton save6;
    private javax.swing.JButton save7;
    private javax.swing.JButton save8;
    private javax.swing.JButton save9;
    private javax.swing.JButton saveCustomPlant;
    private javax.swing.JTextField searchDisplay;
    private javax.swing.JPasswordField sigConfirmPassword;
    private javax.swing.JPasswordField sigPassword;
    private javax.swing.JTextField sigUserName;
    private javax.swing.JButton signUp;
    private javax.swing.JButton signUpButton;
    private javax.swing.JPanel signUpPanel;
    private javax.swing.JPanel snakePlantPanel;
    private javax.swing.JPanel spiderPlantPanel;
    private javax.swing.JPanel succulentPanel;
    private javax.swing.JTextField textCustomPlant;
    private javax.swing.JLabel userAccountWelcome;
    private javax.swing.JPanel userInitial;
    private javax.swing.JPanel userPlant;
    private javax.swing.JTextField userPlantsDisplay;
    private javax.swing.JPanel userRecInitial;
    private javax.swing.JTextField waterDaysText;
    private javax.swing.JTextField waterPlantsDisplay;
    private javax.swing.JPanel welcomePanel;
    private javax.swing.JTextField wishlistDisplay;
    private javax.swing.JPanel wishlistPanel;
    // End of variables declaration//GEN-END:variables
    javax.swing.JPanel j;
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        String [][] someArray = {{"first", "third", "fifth"}, {"second", "fourth", "sixth"}};
        columnMajor(someArray);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerraData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerraData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerraData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerraData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerraData().setVisible(true);
            }
        });
    }
    public static void columnMajor(String[][] a){
    for(int i = 0; i < a[0].length; i++) {
        for(int j = 0; j < a.length; j++)
            System.out.println(a[j][i]);
    }
}
}
